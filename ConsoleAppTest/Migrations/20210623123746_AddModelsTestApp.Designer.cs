// <auto-generated />
using System;
using ConsoleAppTest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsoleAppTest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210623123746_AddModelsTestApp")]
    partial class AddModelsTestApp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("ConsoleAppTest.Data.Model.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<decimal>("Balance")
                        .HasPrecision(29, 2)
                        .HasColumnType("decimal(29,2)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.HasIndex("Number");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ConsoleAppTest.Data.Model.AccountTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("Operation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<long>("RecipientAccountId")
                        .HasColumnType("bigint");

                    b.Property<long>("RecipientClientId")
                        .HasColumnType("bigint");

                    b.Property<long>("SenderAccountId")
                        .HasColumnType("bigint");

                    b.Property<long>("SenderClientId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Sum")
                        .HasPrecision(29, 2)
                        .HasColumnType("decimal(29,2)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Account_Transactions");
                });

            modelBuilder.Entity("ConsoleAppTest.Data.Model.BankClient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("Iin")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("char(12)")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.HasIndex("CityId")
                        .IsUnique();

                    b.HasIndex("CountryId")
                        .IsUnique();

                    b.HasIndex("FullName");

                    b.HasIndex("Iin")
                        .IsUnique();

                    b.ToTable("Bank_Clients");
                });

            modelBuilder.Entity("ConsoleAppTest.Data.Model.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("ConsoleAppTest.Data.Model.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("ConsoleAppTest.Data.Model.Account", b =>
                {
                    b.HasOne("ConsoleAppTest.Data.Model.BankClient", "BankClient")
                        .WithOne("Account")
                        .HasForeignKey("ConsoleAppTest.Data.Model.Account", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankClient");
                });

            modelBuilder.Entity("ConsoleAppTest.Data.Model.BankClient", b =>
                {
                    b.HasOne("ConsoleAppTest.Data.Model.City", "City")
                        .WithOne("BankClient")
                        .HasForeignKey("ConsoleAppTest.Data.Model.BankClient", "CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleAppTest.Data.Model.Country", "Country")
                        .WithOne("BankClient")
                        .HasForeignKey("ConsoleAppTest.Data.Model.BankClient", "CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ConsoleAppTest.Data.Model.BankClient", b =>
                {
                    b.Navigation("Account");
                });

            modelBuilder.Entity("ConsoleAppTest.Data.Model.City", b =>
                {
                    b.Navigation("BankClient");
                });

            modelBuilder.Entity("ConsoleAppTest.Data.Model.Country", b =>
                {
                    b.Navigation("BankClient");
                });
#pragma warning restore 612, 618
        }
    }
}
